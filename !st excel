import pandas as pd

# Step 1: Read the data from Excel CSV file into a pandas DataFrame
file_path = 'your_data.csv'  # Replace with your file path
df = pd.read_csv(file_path)

# Step 2: Function to find list of numbers and retrieve row 1 column value for each
def find_numbers(numbers_list):
    results = {}
    for number in numbers_list:
        found = False
        # Iterate through each cell in the DataFrame
        for index, row in df.iterrows():
            for col in df.columns:
                cell_value = str(row[col])  # Convert to string to handle non-string data types
                if str(number) == cell_value:
                    results[number] = row.iloc[0]  # Store the value from row 1 for the number
                    found = True
                    break
            if found:
                break
        if not found:
            results[number] = "No match found"  # If number is not found, indicate no match
    return results

# Example usage with a list of numbers
numbers_to_find = ['9586867657', '12345', '555-1234']  # Replace with your list of numbers
results = find_numbers(numbers_to_find)

# Print results
for number, result in results.items():
    print(f"Number: {number}, Found in column: {result}")



import pandas as pd

# Load the dataset (replace 'your_dataset.csv' with the actual file path)
df = pd.read_csv('your_dataset.csv')

def find_columns(values):
    result = {}
    for value in values:
        found = False
        for column in df.columns:
            if df[column].astype(str).str.contains(str(value)).any():
                result[value] = column
                found = True
                break
        if not found:
            result[value] = "Value not found"
    return result

# Example usage
values_to_search = ['0.2', '27065500 CR04', '24059400 OD03']  # Replace with your list of values
columns = find_columns(values_to_search)
for value, column in columns.items():
    print(f"The value '{value}' is found in the column: {column}")




import pandas as pd

# Load the dataset with a specified encoding
try:
    df = pd.read_csv('your_dataset.csv', encoding='utf-8')
except UnicodeDecodeError:
    try:
        df = pd.read_csv('your_dataset.csv', encoding='latin1')
    except UnicodeDecodeError:
        df = pd.read_csv('your_dataset.csv', encoding='iso-8859-1')

def find_columns(values):
    found_values = []
    not_found_values = []
    for value in values:
        found = False
        for column in df.columns:
            if df[column].astype(str).str.contains(str(value)).any():
                found_values.append((value, column))
                found = True
                break
        if not found:
            not_found_values.append(value)
    return found_values, not_found_values

# Example usage
values_to_search = ['0.2', '27065500 CR04', '24059400 OD03']  # Replace with your list of values
found_values, not_found_values = find_columns(values_to_search)

# Print results
print("Found values and their columns:")
for value, column in found_values:
    print(f"The value '{value}' is found in the column: {column}")

print("\nNot found values:")
for value in not_found_values:
    print(f"The value '{value}' is not found in any column.")






import pandas as pd

# Load the dataset with a specified encoding
try:
    df = pd.read_csv('your_dataset.csv', encoding='utf-8')
except UnicodeDecodeError:
    try:
        df = pd.read_csv('your_dataset.csv', encoding='latin1')
    except UnicodeDecodeError:
        df = pd.read_csv('your_dataset.csv', encoding='iso-8859-1')

# Lists to store strings, floats, and integers
string_values = []
float_values = []
int_values = []

# Iterate over each column and check the type of the first non-null value
for column in df.columns:
    sample_value = df[column].dropna().iloc[0]  # Take the first non-null value from the column
    try:
        float_value = float(sample_value)
        if float_value.is_integer():
            int_values.append(int(float_value))
        else:
            float_values.append(float_value)
    except ValueError:
        string_values.append(str(sample_value))

# Print results
print("String values:")
print(string_values)
print("\nInteger values:")
print(int_values)
print("\nFloat values:")
print(float_values)
