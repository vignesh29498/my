import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.neighbors import NearestNeighbors

# Load the CSV report
df = pd.read_csv('report.csv')

# Assume the CSV has a column 'text' containing sentences
texts = df['text'].tolist()

# Initialize TF-IDF Vectorizer
vectorizer = TfidfVectorizer(max_features=100, stop_words='english')

# Fit and transform the texts
X = vectorizer.fit_transform(texts)

# Initialize and train the Nearest Neighbors model
model = NearestNeighbors(n_neighbors=1, metric='cosine')
model.fit(X)

# Function to find the most similar line
def find_similar_line(new_sentence, model, vectorizer, texts):
    # Transform the new sentence
    new_X = vectorizer.transform([new_sentence])
    
    # Find the nearest neighbor
    distances, indices = model.kneighbors(new_X)
    
    # Return the most similar line
    return texts[indices[0][0]]

# Example usage
new_sentence = "Your new input sentence"
similar_line = find_similar_line(new_sentence, model, vectorizer, texts)
print(f'The most similar line is: {similar_line}')
