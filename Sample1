import pandas as pd

def get_repeated_values_and_positions(main_list, position_list):
    # Ensure the position_list is of the same length as main_list
    if len(main_list) != len(position_list):
        raise ValueError("The length of position_list must be equal to the length of main_list")

    # Convert the list to a pandas Series
    series = pd.Series(main_list)
    
    # Get the repeated values
    repeated_values = series[series.duplicated()].unique()
    
    # Create a dictionary to hold positions for each repeated value
    positions_dict = {value: [] for value in repeated_values}
    
    # Populate the dictionary with positions from position_list
    for index, value in enumerate(main_list):
        if value in repeated_values:
            positions_dict[value].append(position_list[index])
    
    return repeated_values.tolist(), positions_dict

# Example usage
main_list = [1, 2, 3, 2, 4, 5, 1, 6, 7, 4]
position_list = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]

repeated_values, positions_dict = get_repeated_values_and_positions(main_list, position_list)

print("Repeated values:", repeated_values)
print("Positions of repeated values:", positions_dict)
